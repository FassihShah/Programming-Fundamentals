#include<iostream>
using namespace std;
void changeKthDigit(int* , int , int );
int main()
{
	int num = 123456;
	changeKthDigit(&num, 1, 9);
	cout << num;
	cout << endl;
	return 0;
}
int getNumberLenght(int num)
{
	int lenght=0;
	do
	{
		num = num / 10;
		lenght = lenght + 1;
	} while (num != 0);
	return lenght;
}
//int getLargestNDigitNumber(int num)
//{
//	int cnt1 = getNumberLenght(num),divisor=1,cnt2=1;
//	num = 1;
//	do
//	{
//		num = num * divisor*9;
//		divisor = divisor * 10;
//		cnt2 = cnt2 + 1;
//	} 
//	while (cnt2 <= cnt1);
//	return num;
//}

void changeKthDigit(int* number, int kthDigit, int newDigit)
{
	int  mode2 = 0, divisor = 1,mode,lenght= getNumberLenght(*number);
	for (int cnt = 0; cnt < kthDigit; cnt = cnt + 1)
	{
		mode = *number % 10;
		*number = *number / 10;
		mode2 = mode * divisor + mode2;
		divisor = divisor * 10;
	}
	*number = *number / 10;
	int lenght2 = getNumberLenght(*number),count = lenght - lenght2;
	divisor = 1;
	for (int i = 0; i < count; i++)
	{
		divisor = divisor * 10;
	}
	*number = *number * divisor;
	newDigit = newDigit * divisor / 10;
	if (*number < 0)
	{
		*number = *number - newDigit - mode2;
	}
	else
	{
		*number = *number + newDigit + mode2;
	}
}